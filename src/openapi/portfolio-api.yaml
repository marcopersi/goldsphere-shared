openapi: 3.0.0
info:
  title: GoldSphere Portfolio Management API
  description: API for managing precious metals positions and transactions
  version: 1.0.0
  contact:
    name: GoldSphere API Team
    email: api@goldsphere.vault

servers:
  - url: http://localhost:8080/api
    description: Development server
  - url: https://api.goldsphere.vault
    description: Production server

security:
  - bearerAuth: []

paths:
  /positions:
    get:
      summary: Get user positions
      description: Retrieve a paginated list of user's precious metals positions
      tags:
        - Positions
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          description: Filter by position status
          required: false
          schema:
            type: string
            enum: [active, closed]
        - name: metal
          in: query
          description: Filter by metal type
          required: false
          schema:
            type: string
            enum: [gold, silver, platinum, palladium]
        - name: producer
          in: query
          description: Filter by producer/mint
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Position'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create new position
      description: Add a new precious metals position to user's portfolio
      tags:
        - Positions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionCreateRequest'
      responses:
        '201':
          description: Position successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  position:
                    $ref: '#/components/schemas/Position'
                  message:
                    type: string
                    example: "Position created successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /positions/{positionId}:
    get:
      summary: Get position by ID
      description: Retrieve detailed information about a specific position
      tags:
        - Positions
      parameters:
        - name: positionId
          in: path
          required: true
          description: Unique position identifier
          schema:
            type: string
            example: "pos_1oz_american_eagle_gold_2024_001"
      responses:
        '200':
          description: Position found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Position'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update position
      description: Update an existing position's information
      tags:
        - Positions
      parameters:
        - name: positionId
          in: path
          required: true
          description: Unique position identifier
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionUpdateRequest'
      responses:
        '200':
          description: Position updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  position:
                    $ref: '#/components/schemas/Position'
                  message:
                    type: string
                    example: "Position updated successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Close position
      description: Close a position (soft delete)
      tags:
        - Positions
      parameters:
        - name: positionId
          in: path
          required: true
          description: Unique position identifier
          schema:
            type: string
      responses:
        '200':
          description: Position closed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Position closed successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions:
    get:
      summary: Get transaction history
      description: Retrieve user's transaction history with filtering options
      tags:
        - Transactions
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: type
          in: query
          description: Filter by transaction type
          required: false
          schema:
            type: string
            enum: [buy, sell]
        - name: positionId
          in: query
          description: Filter by position ID
          required: false
          schema:
            type: string
        - name: startDate
          in: query
          description: Filter transactions from this date (ISO 8601)
          required: false
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Filter transactions to this date (ISO 8601)
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactions:
                    type: array
                    items:
                      $ref: '#/components/schemas/TransactionHistoryItem'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Record transaction
      description: Record a new buy/sell transaction
      tags:
        - Transactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateRequest'
      responses:
        '201':
          description: Transaction recorded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  transaction:
                    $ref: '#/components/schemas/Transaction'
                  message:
                    type: string
                    example: "Transaction recorded successfully"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /transactions/{transactionId}:
    get:
      summary: Get transaction by ID
      description: Retrieve detailed information about a specific transaction
      tags:
        - Transactions
      parameters:
        - name: transactionId
          in: path
          required: true
          description: Unique transaction identifier
          schema:
            type: string
      responses:
        '200':
          description: Transaction found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /portfolio/summary:
    get:
      summary: Get portfolio summary
      description: Get aggregated portfolio statistics and performance metrics
      tags:
        - Portfolio
      responses:
        '200':
          description: Portfolio summary
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PortfolioSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Position:
      type: object
      required:
        - id
        - userId
        - productId
        - purchaseDate
        - purchasePrice
        - marketPrice
        - quantity
        - issuingCountry
        - producer
        - certifiedProvenance
        - status
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique position identifier
          example: "pos_1oz_american_eagle_gold_2024_001"
        userId:
          type: string
          description: ID of the user who owns this position
          example: "user_123456"
        productId:
          type: string
          description: Reference to the product ID
          example: "prod_1oz_american_eagle_gold_2024"
        purchaseDate:
          type: string
          format: date-time
          description: Date when the position was opened
          example: "2024-08-07T10:30:00Z"
        purchasePrice:
          type: number
          minimum: 0
          description: Price paid per unit at purchase
          example: 2100.50
        marketPrice:
          type: number
          minimum: 0
          description: Current market price per unit
          example: 2150.75
        quantity:
          type: number
          minimum: 0
          description: Number of units in this position
          example: 5
        issuingCountry:
          type: string
          description: Country where the precious metal was issued
          example: "USA"
        producer:
          type: string
          description: Producer or mint name
          example: "US Mint"
        certifiedProvenance:
          type: boolean
          description: Whether the provenance is certified
          example: true
        status:
          type: string
          enum: [active, closed]
          description: Current status of the position
          example: "active"
        closedDate:
          type: string
          format: date-time
          description: Date when the position was closed (if applicable)
          example: "2024-08-15T14:20:00Z"
        notes:
          type: string
          description: Optional notes about the position
          example: "Purchased during market dip"
        createdAt:
          type: string
          format: date-time
          description: Position creation timestamp
          example: "2024-08-07T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          description: Last update timestamp
          example: "2024-08-07T10:30:00Z"

    PositionCreateRequest:
      type: object
      required:
        - productId
        - purchaseDate
        - purchasePrice
        - quantity
        - issuingCountry
        - producer
        - certifiedProvenance
      properties:
        productId:
          type: string
          description: Reference to the product ID
        purchaseDate:
          type: string
          format: date-time
          description: Date when the position was opened
        purchasePrice:
          type: number
          minimum: 0.01
          description: Price paid per unit at purchase
        quantity:
          type: number
          minimum: 0.001
          description: Number of units in this position
        issuingCountry:
          type: string
          minLength: 1
          maxLength: 100
          description: Country where the precious metal was issued
        producer:
          type: string
          minLength: 1
          maxLength: 100
          description: Producer or mint name
        certifiedProvenance:
          type: boolean
          description: Whether the provenance is certified
        notes:
          type: string
          maxLength: 1000
          description: Optional notes about the position

    PositionUpdateRequest:
      type: object
      properties:
        marketPrice:
          type: number
          minimum: 0.01
          description: Current market price per unit
        quantity:
          type: number
          minimum: 0.001
          description: Number of units in this position
        notes:
          type: string
          maxLength: 1000
          description: Optional notes about the position
        status:
          type: string
          enum: [active, closed]
          description: Current status of the position

    Transaction:
      type: object
      required:
        - id
        - positionId
        - userId
        - type
        - date
        - quantity
        - price
        - createdAt
      properties:
        id:
          type: string
          description: Unique transaction identifier
          example: "txn_buy_001_2024080712345"
        positionId:
          type: string
          description: Reference to the position ID
          example: "pos_1oz_american_eagle_gold_2024_001"
        userId:
          type: string
          description: ID of the user who made this transaction
          example: "user_123456"
        type:
          type: string
          enum: [buy, sell]
          description: Type of transaction
          example: "buy"
        date:
          type: string
          format: date-time
          description: Date and time of the transaction
          example: "2024-08-07T12:45:00Z"
        quantity:
          type: number
          minimum: 0.001
          description: Number of units transacted
          example: 2.5
        price:
          type: number
          minimum: 0.01
          description: Price per unit for this transaction
          example: 2100.50
        fees:
          type: number
          minimum: 0
          description: Transaction fees
          example: 25.00
        notes:
          type: string
          description: Optional transaction notes
          example: "Partial sale for portfolio rebalancing"
        createdAt:
          type: string
          format: date-time
          description: Transaction creation timestamp
          example: "2024-08-07T12:45:00Z"

    TransactionCreateRequest:
      type: object
      required:
        - positionId
        - type
        - date
        - quantity
        - price
      properties:
        positionId:
          type: string
          description: Reference to the position ID
        type:
          type: string
          enum: [buy, sell]
          description: Type of transaction
        date:
          type: string
          format: date-time
          description: Date and time of the transaction
        quantity:
          type: number
          minimum: 0.001
          description: Number of units transacted
        price:
          type: number
          minimum: 0.01
          description: Price per unit for this transaction
        fees:
          type: number
          minimum: 0
          description: Transaction fees
          default: 0
        notes:
          type: string
          maxLength: 500
          description: Optional transaction notes

    TransactionHistoryItem:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - type: object
          properties:
            productName:
              type: string
              description: Name of the product
              example: "1 oz American Eagle Gold Coin 2024"
            total:
              type: number
              description: Total transaction amount (quantity * price + fees)
              example: 5276.25

    PortfolioSummary:
      type: object
      properties:
        totalValue:
          type: number
          description: Total current value of all positions
          example: 125750.50
        totalCost:
          type: number
          description: Total cost basis of all positions
          example: 118200.00
        totalGainLoss:
          type: number
          description: Total unrealized gain/loss
          example: 7550.50
        totalGainLossPercentage:
          type: number
          description: Total gain/loss as percentage
          example: 6.39
        positionCount:
          type: integer
          description: Number of active positions
          example: 12
        metalBreakdown:
          type: object
          description: Breakdown by metal type
          properties:
            gold:
              $ref: '#/components/schemas/MetalBreakdown'
            silver:
              $ref: '#/components/schemas/MetalBreakdown'
            platinum:
              $ref: '#/components/schemas/MetalBreakdown'
            palladium:
              $ref: '#/components/schemas/MetalBreakdown'
        lastUpdated:
          type: string
          format: date-time
          description: When the summary was last calculated
          example: "2024-08-07T15:30:00Z"

    MetalBreakdown:
      type: object
      properties:
        value:
          type: number
          description: Total value for this metal type
          example: 75450.30
        percentage:
          type: number
          description: Percentage of total portfolio
          example: 60.0
        weight:
          type: number
          description: Total weight in grams
          example: 155.5
        positionCount:
          type: integer
          description: Number of positions for this metal
          example: 7

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 150
        totalPages:
          type: integer
          example: 8
        hasNext:
          type: boolean
          example: true
  hasPrevious:
          type: boolean
          example: false

    Error:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "Invalid input data"
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    example: "quantity"
                  message:
                    type: string
                    example: "Quantity must be greater than 0"

  responses:
    BadRequest:
      description: Bad request - invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Positions
    description: Portfolio position management operations
  - name: Transactions
    description: Transaction recording and history operations
  - name: Portfolio
    description: Portfolio summary and analytics operations
