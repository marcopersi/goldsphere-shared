openapi: 3.0.0
info:
  title: GoldSphere Trading API
  description: API for precious metals trading operations
  version: 1.0.0
  contact:
    name: GoldSphere Trading Team
    email: trading@goldsphere.vault

servers:
  - url: http://localhost:8080/api
    description: Development server
  - url: https://api.goldsphere.vault
    description: Production server

security:
  - bearerAuth: []

paths:
  /orders:
    get:
      summary: Get user orders
      description: Retrieve a paginated list of user's trading orders
      tags:
        - Orders
      parameters:
        - name: page
          in: query
          description: Page number for pagination
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          description: Number of items per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: status
          in: query
          description: Filter by order status
          required: false
          schema:
            type: string
            enum: [pending, processing, shipped, delivered, cancelled]
        - name: type
          in: query
          description: Filter by order type
          required: false
          schema:
            type: string
            enum: [buy, sell]
        - name: userId
          in: query
          description: Filter by user ID
          required: false
          schema:
            type: string
        - name: dateFrom
          in: query
          description: Filter orders from this date
          required: false
          schema:
            type: string
            format: date
        - name: dateTo
          in: query
          description: Filter orders until this date
          required: false
          schema:
            type: string
            format: date
        - name: minAmount
          in: query
          description: Minimum total order amount
          required: false
          schema:
            type: number
        - name: maxAmount
          in: query
          description: Maximum total order amount
          required: false
          schema:
            type: number
        - name: currency
          in: query
          description: Filter by currency (ISO3)
          required: false
          schema:
            type: string
            example: USD
        - name: search
          in: query
          description: Search by order number, customer name, etc.
          required: false
          schema:
            type: string
        - name: priority
          in: query
          description: Filter by priority
          required: false
          schema:
            type: string
            enum: [normal, high, urgent]
        - name: source
          in: query
          description: Source of order
          required: false
          schema:
            type: string
            enum: [web, mobile, api, admin, phone]
        - name: sortBy
          in: query
          description: Sort field
          required: false
          schema:
            type: string
            enum: [createdAt, updatedAt, totalAmount, orderNumber]
            default: createdAt
        - name: sortOrder
          in: query
          description: Sort order
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order'
                      pagination:
                        $ref: '#/components/schemas/Pagination'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /orders/calculate:
    post:
      summary: Calculate order totals
      description: Calculate totals, fees, and taxes for a prospective order
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateOrderRequest'
      responses:
        '200':
          description: Calculation completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCalculationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /orders/stats:
    get:
      summary: Get order statistics
      description: Retrieve aggregated statistics for orders in a period
      tags:
        - Orders
      parameters:
        - name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: groupBy
          in: query
          required: false
          schema:
            type: string
            enum: [day, week, month]
            default: day
        - name: currency
          in: query
          required: false
          schema:
            type: string
            example: USD
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderStatsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      summary: Create new order
      description: Place a new buy or sell order for precious metals
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderInput'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '402':
          description: Insufficient funds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Insufficient inventory
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /orders/{orderId}:
    get:
      summary: Get order by ID
      description: Retrieve detailed information about a specific order
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: Unique order identifier
          schema:
            type: string
            example: "ord_20240807_001"
      responses:
        '200':
          description: Order found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /orders/{orderId}/process:
    post:
      summary: Process order action
      description: Perform a workflow action on an order (confirm, cancel, ship, deliver, complete)
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessOrderRequest'
      responses:
        '200':
          description: Order processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Invalid status transition or action
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /orders/{orderId}/items:
    post:
      summary: Add order item
      description: Add a new item to an existing order (allowed in certain statuses)
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOrderItemRequest'
      responses:
        '200':
          description: Item added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Order cannot be modified in current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /orders/{orderId}/items/{itemId}:
    patch:
      summary: Update order item
      description: Update an item in an existing order (quantity or custody assignment)
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemRequest'
      responses:
        '200':
          description: Item updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Order cannot be modified in current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'
    delete:
      summary: Remove order item
      description: Remove an item from an existing order
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Item removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Order cannot be modified in current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /orders/{orderId}/custody/assign:
    post:
      summary: Assign custody for order items
      description: Assign custody services and custodians to order items
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignCustodyRequest'
      responses:
        '200':
          description: Custody assigned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Invalid assignment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      summary: Update order
      description: Update order details (limited to certain statuses)
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: Unique order identifier
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdateRequest'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Order cannot be modified in current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      summary: Cancel order
      description: Cancel a pending or processing order
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          description: Unique order identifier
          schema:
            type: string
      responses:
        '204':
          description: Order cancelled successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Order cannot be cancelled in current status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /quotes:
    post:
      summary: Request trading quote
      description: Get a real-time quote for buying or selling precious metals
      tags:
        - Trading
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuoteRequest'
      responses:
        '200':
          description: Quote generated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Quote'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /prices/live:
    get:
      summary: Get live precious metals prices
      description: Retrieve current spot prices for precious metals
      tags:
        - Prices
      parameters:
        - name: metals
          in: query
          description: Comma-separated list of metals to get prices for
          required: false
          schema:
            type: string
            example: "gold,silver,platinum"
        - name: currency
          in: query
          description: Currency for price quotes
          required: false
          schema:
            type: string
            enum: [USD, EUR, GBP, CHF]
            default: USD
      responses:
        '200':
          description: Current spot prices
          content:
            application/json:
              schema:
                type: object
                properties:
                  prices:
                    type: object
                    properties:
                      gold:
                        $ref: '#/components/schemas/MetalPrice'
                      silver:
                        $ref: '#/components/schemas/MetalPrice'
                      platinum:
                        $ref: '#/components/schemas/MetalPrice'
                      palladium:
                        $ref: '#/components/schemas/MetalPrice'
                  timestamp:
                    type: string
                    format: date-time
                    example: "2024-08-07T10:30:00Z"
                  source:
                    type: string
                    example: "London Metal Exchange"
        '500':
          $ref: '#/components/responses/InternalServerError'

  /prices/history:
    get:
      summary: Get historical price data
      description: Retrieve historical price data for precious metals
      tags:
        - Prices
      parameters:
        - name: metal
          in: query
          required: true
          description: Metal type
          schema:
            type: string
            enum: [gold, silver, platinum, palladium]
        - name: period
          in: query
          required: true
          description: Time period for historical data
          schema:
            type: string
            enum: [1d, 7d, 1m, 3m, 6m, 1y, 5y]
        - name: currency
          in: query
          description: Currency for price quotes
          required: false
          schema:
            type: string
            enum: [USD, EUR, GBP, CHF]
            default: USD
      responses:
        '200':
          description: Historical price data
          content:
            application/json:
              schema:
                type: object
                properties:
                  metal:
                    type: string
                    example: "gold"
                  currency:
                    type: string
                    example: "USD"
                  period:
                    type: string
                    example: "1m"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        price:
                          type: number
                          example: 2100.50
                        volume:
                          type: number
                          example: 1500000
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /portfolio:
    get:
      summary: Get user portfolio
      description: Retrieve user's precious metals portfolio
      tags:
        - Portfolio
      responses:
        '200':
          description: User portfolio
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Portfolio'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /portfolio/positions:
    get:
      summary: Get portfolio positions
      description: Retrieve detailed breakdown of portfolio positions
      tags:
        - Portfolio
      parameters:
        - name: metal
          in: query
          description: Filter by metal type
          required: false
          schema:
            type: string
            enum: [gold, silver, platinum, palladium]
      responses:
        '200':
          description: Portfolio positions
          content:
            application/json:
              schema:
                type: object
                properties:
                  positions:
                    type: array
                    items:
                      $ref: '#/components/schemas/Position'
                  summary:
                    $ref: '#/components/schemas/PortfolioSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    OrderResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          $ref: '#/components/schemas/Order'
    Order:
      type: object
      required:
        - id
        - userId
        - type
        - status
        - items
        - totalAmount
        - currency
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: Unique order identifier
          example: "ord_20240807_001"
        userId:
          type: string
          description: User identifier
          example: "user_12345"
        type:
          type: string
          enum: [buy, sell]
          description: Order type
          example: "buy"
        status:
          type: string
          enum: [pending, processing, shipped, delivered, cancelled]
          description: Current order status
          example: "pending"
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
          description: Items in the order
        subtotal:
          type: number
          description: Subtotal before fees and taxes
          example: 2100.50
        fees:
          type: object
          properties:
            processing:
              type: number
              example: 25.00
            shipping:
              type: number
              example: 15.00
            insurance:
              type: number
              example: 10.00
        taxes:
          type: number
          description: Tax amount
          example: 150.75
        totalAmount:
          type: number
          description: Total order amount
          example: 2301.25
        currency:
          type: string
          enum: [USD, EUR, CHF, GBP, CAD, AUD]
          description: Order currency
          example: "USD"
        shippingAddress:
          $ref: '#/components/schemas/Address'
        paymentMethod:
          type: object
          properties:
            type:
              type: string
              enum: [credit_card, bank_transfer, crypto, check, wire]
            provider:
              type: string
              example: "stripe"
            last4:
              type: string
              example: "1234"
            brand:
              type: string
              example: "visa"
            expiryMonth:
              type: integer
              minimum: 1
              maximum: 12
              example: 12
            expiryYear:
              type: integer
              example: 2030
            verified:
              type: boolean
              default: false
        tracking:
          type: object
          properties:
            trackingNumber:
              type: string
              example: "1Z999AA1234567890"
            trackingUrl:
              type: string
              format: uri
              example: "https://track.example.com/1Z999AA1234567890"
            signatureRequired:
              type: boolean
              default: true
        shippingMethod:
          type: string
          description: Shipping method selected for the order
          enum: [standard, priority, express, pickup]
        notes:
          type: string
          description: Order notes or special instructions
        createdAt:
          type: string
          format: date-time
          example: "2024-08-07T10:30:00Z"
        updatedAt:
          type: string
          format: date-time
          example: "2024-08-07T10:30:00Z"

    OrderItem:
      type: object
      required:
        - id
        - productId
        - quantity
        - unitPrice
        - totalPrice
      properties:
        id:
          type: string
          description: Order item identifier
          example: "f9a1b1b6-8a1c-4f13-9d5a-9f5f3c1a2b7e"
        productId:
          type: string
          description: Product identifier
          example: "prod_1oz_american_eagle_gold_2024"
        productName:
          type: string
          description: Product name
          example: "1 oz American Eagle Gold Coin 2024"
        quantity:
          type: integer
          minimum: 1
          description: Quantity ordered
          example: 2
        unitPrice:
          type: number
          description: Price per unit at time of order
          example: 2100.50
        totalPrice:
          type: number
          description: Total price for this item
          example: 4201.00
        custodyServiceId:
          type: string
          description: Custody Service identifier for this item
          example: "5e8f7b2a-3c4d-4a5e-8f7b-2a3c4d5e8f7b"
        certificateRequested:
          type: boolean
          description: Whether a certificate is requested for this item
          default: false
    CreateOrderInput:
      type: object
      required:
        - type
        - currency
        - items
      properties:
        type:
          type: string
          enum: [buy, sell]
          description: Order type
        currency:
          type: string
          enum: [USD, EUR, CHF, GBP, CAD, AUD]
          description: Order currency (ISO 4217)
        items:
          type: array
          items:
            type: object
            required:
              - productId
              - quantity
            properties:
              productId:
                type: string
                description: Product identifier
              quantity:
                type: integer
                minimum: 1
                description: Quantity to order
              custodyServiceId:
                type: string
                description: Optional custody service identifier for this item
          minItems: 1
        shippingAddress:
          $ref: '#/components/schemas/Address'
        paymentMethod:
          type: object
          properties:
            type:
              type: string
              enum: [credit_card, bank_transfer, crypto, check, wire]
            provider:
              type: string
            last4:
              type: string
            brand:
              type: string
            expiryMonth:
              type: integer
              minimum: 1
              maximum: 12
            expiryYear:
              type: integer
            verified:
              type: boolean
        notes:
          type: string
          maxLength: 500
          description: Order notes or special instructions

    CalculateOrderRequest:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          minItems: 1
          items:
            type: object
            required: [productId, quantity]
            properties:
              productId:
                type: string
                format: uuid
              quantity:
                type: number
                minimum: 1
        shippingAddress:
          $ref: '#/components/schemas/Address'
        shippingMethod:
          type: string
          enum: [standard, priority, express, pickup]
        currency:
          type: string
          example: USD

    ProcessOrderRequest:
      type: object
      required: [action]
      properties:
        action:
          type: string
          enum: [confirm, cancel, ship, deliver, complete]
        reason:
          type: string
        notes:
          type: string
        tracking:
          type: object
          properties:
            trackingNumber:
              type: string
            carrier:
              type: string
            estimatedDelivery:
              type: string
              format: date-time

    AssignCustodyRequest:
      type: object
      required: [assignments]
      properties:
        assignments:
          type: array
          minItems: 1
          items:
            type: object
            required: [itemId, custodianId, custodyServiceId]
            properties:
              itemId:
                type: string
                format: uuid
              custodianId:
                type: string
                format: uuid
              custodyServiceId:
                type: string
                format: uuid

    AddOrderItemRequest:
      type: object
      required: [productId, quantity]
      properties:
        productId:
          type: string
          format: uuid
        quantity:
          type: number
          minimum: 1
        custodyServiceId:
          type: string
          format: uuid

    UpdateOrderItemRequest:
      type: object
      properties:
        quantity:
          type: number
          minimum: 1
        custodyServiceId:
          type: string
          format: uuid

    OrderUpdateRequest:
      type: object
      properties:
        shippingAddress:
          $ref: '#/components/schemas/Address'
        notes:
          type: string
          maxLength: 500
          description: Order notes or special instructions

    QuoteRequest:
      type: object
      required:
        - type
        - items
      properties:
        type:
          type: string
          enum: [buy, sell]
          description: Quote type
        items:
          type: array
          items:
            type: object
            required:
              - productId
              - quantity
            properties:
              productId:
                type: string
                description: Product identifier
              quantity:
                type: integer
                minimum: 1
                description: Quantity for quote
          minItems: 1

    Quote:
      type: object
      required:
        - id
        - type
        - items
        - subtotal
        - fees
        - taxes
        - totalAmount
        - currency
        - validUntil
        - createdAt
      properties:
        id:
          type: string
          description: Quote identifier
          example: "quote_20240807_001"
        type:
          type: string
          enum: [buy, sell]
          description: Quote type
        items:
          type: array
          items:
            type: object
            properties:
              productId:
                type: string
              productName:
                type: string
              quantity:
                type: integer
              unitPrice:
                type: number
              totalPrice:
                type: number
        subtotal:
          type: number
          description: Subtotal before fees and taxes
          example: 2100.50
        fees:
          type: object
          properties:
            processing:
              type: number
            shipping:
              type: number
            insurance:
              type: number
        taxes:
          type: number
          description: Tax amount
          example: 150.75
        totalAmount:
          type: number
          description: Total quote amount
          example: 2301.25
        currency:
          type: string
          enum: [USD, EUR, GBP, CHF]
          description: Quote currency
        validUntil:
          type: string
          format: date-time
          description: Quote expiration time
          example: "2024-08-07T11:30:00Z"
        marketConditions:
          type: object
          properties:
            spotPrice:
              type: number
            premium:
              type: number
            volatility:
              type: string
              enum: [low, medium, high]
        createdAt:
          type: string
          format: date-time
          example: "2024-08-07T10:30:00Z"

    OrderCalculationResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  productId:
                    type: string
                    format: uuid
                  productName:
                    type: string
                  quantity:
                    type: number
                  unitPrice:
                    type: number
                  totalPrice:
                    type: number
            subtotal:
              type: number
            fees:
              type: object
              properties:
                processing:
                  type: number
                shipping:
                  type: number
                insurance:
                  type: number
            taxes:
              type: number
            totalAmount:
              type: number
            currency:
              type: string

    OrderStatsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            totalOrders:
              type: number
            totalValue:
              type: number
            averageOrderValue:
              type: number
            ordersByStatus:
              type: object
              additionalProperties:
                type: number
            ordersByType:
              type: object
              additionalProperties:
                type: number
            topProducts:
              type: array
              items:
                type: object
                properties:
                  productId:
                    type: string
                    format: uuid
                  productName:
                    type: string
                  quantity:
                    type: number
                  totalValue:
                    type: number
            period:
              type: object
              properties:
                startDate:
                  type: string
                  format: date-time
                endDate:
                  type: string
                  format: date-time

    MetalPrice:
      type: object
      required:
        - price
        - currency
        - unit
        - change24h
        - changePercent24h
      properties:
        price:
          type: number
          description: Current price per troy ounce
          example: 2100.50
        currency:
          type: string
          enum: [USD, EUR, GBP, CHF]
          description: Price currency
        unit:
          type: string
          description: Price unit
          example: "troy_ounce"
        change24h:
          type: number
          description: 24-hour price change
          example: -15.25
        changePercent24h:
          type: number
          description: 24-hour percentage change
          example: -0.72
        high24h:
          type: number
          description: 24-hour high
          example: 2125.75
        low24h:
          type: number
          description: 24-hour low
          example: 2095.00
        volume24h:
          type: number
          description: 24-hour trading volume
          example: 1500000

    Portfolio:
      type: object
      required:
        - userId
        - totalValue
        - currency
        - positions
        - performance
        - lastUpdated
      properties:
        userId:
          type: string
          description: User identifier
        totalValue:
          type: number
          description: Total portfolio value
          example: 150000.00
        currency:
          type: string
          enum: [USD, EUR, GBP, CHF]
          description: Portfolio base currency
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
        performance:
          type: object
          properties:
            totalReturn:
              type: number
              description: Total return amount
              example: 15000.00
            totalReturnPercent:
              type: number
              description: Total return percentage
              example: 11.11
            dayReturn:
              type: number
              description: Day return amount
              example: -500.00
            dayReturnPercent:
              type: number
              description: Day return percentage
              example: -0.33
        allocation:
          type: object
          description: Asset allocation by metal
          properties:
            gold:
              type: number
              example: 65.5
            silver:
              type: number
              example: 25.0
            platinum:
              type: number
              example: 7.5
            palladium:
              type: number
              example: 2.0
        lastUpdated:
          type: string
          format: date-time
          example: "2024-08-07T10:30:00Z"

    Position:
      type: object
      required:
        - productId
        - quantity
        - averagePrice
        - currentValue
        - unrealizedGainLoss
      properties:
        productId:
          type: string
          description: Product identifier
        productName:
          type: string
          description: Product name
        metal:
          type: string
          enum: [gold, silver, platinum, palladium]
          description: Metal type
        quantity:
          type: number
          description: Total quantity held
          example: 10.5
        averagePrice:
          type: number
          description: Average purchase price
          example: 2050.00
        currentPrice:
          type: number
          description: Current market price
          example: 2100.50
        currentValue:
          type: number
          description: Current total value
          example: 22055.25
        unrealizedGainLoss:
          type: number
          description: Unrealized gain/loss
          example: 530.25
        unrealizedGainLossPercent:
          type: number
          description: Unrealized gain/loss percentage
          example: 2.46
        weight:
          type: number
          description: Total weight in grams
          example: 326.55
        acquisitionDates:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              quantity:
                type: number
              price:
                type: number

    PortfolioSummary:
      type: object
      properties:
        totalValue:
          type: number
          example: 150000.00
        totalWeight:
          type: object
          properties:
            gold:
              type: number
              example: 3110.35
            silver:
              type: number
              example: 15551.75
            platinum:
              type: number
              example: 311.04
            palladium:
              type: number
              example: 155.52
        totalQuantity:
          type: object
          properties:
            gold:
              type: number
              example: 100.0
            silver:
              type: number
              example: 500.0
            platinum:
              type: number
              example: 10.0
            palladium:
              type: number
              example: 5.0

    Address:
      type: object
      required:
        - type
        - firstName
        - lastName
        - street
        - city
        - state
        - zipCode
        - country
      properties:
        type:
          type: string
          enum: [shipping, billing, both]
          example: "shipping"
        firstName:
          type: string
          example: "John"
        lastName:
          type: string
          example: "Doe"
        street:
          type: string
          example: "123 Gold Street"
        city:
          type: string
          example: "New York"
        state:
          type: string
          example: "NY"
        zipCode:
          type: string
          example: "10001"
        country:
          type: string
          description: 2-letter ISO country code
          example: "US"
        phone:
          type: string
          example: "+1-555-123-4567"
        isDefault:
          type: boolean
          default: false

    Pagination:
      type: object
      properties:
        page:
          type: integer
          example: 1
        limit:
          type: integer
          example: 20
        total:
          type: integer
          example: 150
        totalPages:
          type: integer
          example: 8
        hasNext:
          type: boolean
          example: true
        hasPrevious:
          type: boolean
          example: false

    Error:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "Invalid input data"
            details:
              type: array
              items:
                type: object
                properties:
                  field:
                    type: string
                    example: "quantity"
                  message:
                    type: string
                    example: "Quantity must be greater than 0"

  responses:
    BadRequest:
      description: Bad request - invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized - invalid or missing authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

tags:
  - name: Orders
    description: Order management operations
  - name: Trading
    description: Trading and quote operations
  - name: Prices
    description: Price data and market information
  - name: Portfolio
    description: Portfolio management operations
